version: 2.1

orbs:
  slack: circleci/slack@2.2.0

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:14

jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
      # Restore dependencies from the cache.
          keys:
          # Only install dependencies when the checksum of the package.json changes.
          - v1-dependencies-{{ checksum "package.json" }}
          # Fallback to using the latest cache if no exact match is found.
          - v1-dependencies-
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Run build
          command: npm run build
      - run:
          name: Test saving file
          command: echo "Hello, World" >> output.txt  
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          # Persist the previous steps to the workspace.
          root: ~/repo
          paths: .

  create-v5-v6-branch:
    <<: *defaults
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "40:4a:18:c2:b1:af:16:a8:27:54:65:ba:89:38:13:33"
      - run:
          name: "Create v5 and v6 branch"
          command: |
            echo $CIRCLE_BRANCH
            # Store the name of the current branch
            CURRENT_BRANCH=${CIRCLE_BRANCH}

            git log main..$CIRCLE_BRANCH --pretty=format:"%H" >> shas.txt
            echo "Added all commits from ${CURRENT_BRANCH} into file sha.txt"

            echo "Function to create or checkout a branch"
            create_or_checkout_branch() {
                # First param is BRANCH_NAME
                BRANCH_NAME=$1
                # Check if the branch exists
                if git show-ref --verify --quiet refs/heads/$BRANCH_NAME; then
                    # Checkout if it exists
                    echo "Branch $BRANCH_NAME already exists, checking out to $CURRENT_BRANCH."
                    git checkout $CURRENT_BRANCH
                    echo "You are currently on the branch"
                    git branch | grep -o "* .*"
                else
                    # Create and push branch if it doesn't exist
                    echo "Creating new branch $BRANCH_NAME."
                    git checkout -b $BRANCH_NAME

                    echo "You are currently on the branch"
                    git branch | grep -o "* .*"

                    git push origin $BRANCH_NAME
                    echo "Branch $BRANCH_NAME pushed to remote, checking out to $CURRENT_BRANCH."

                    git checkout $CURRENT_BRANCH
                    echo "You are currently on the branch"
                    git branch | grep -o "* .*"
                fi
            }     

            echo "Create and push -v5 branch"
            echo "Checkout to v5 branch"
            git checkout v5
            echo "You are currently on the branch"
            git branch | grep -o "* .*"
            create_or_checkout_branch "${CURRENT_BRANCH}-v5"

            echo "Create and push -v6 branch"
            echo "Checkout to v6 branch"
            git checkout v6
            echo "You are currently on the branch"
            git branch | grep -o "* .*"
            create_or_checkout_branch "${CURRENT_BRANCH}-v6"     
      - persist_to_workspace:
          # Persist the previous steps to the workspace.
          root: ~/repo
          paths: .

  copy-to-v5-branch:
    <<: *defaults
    steps:
      - attach_workspace:
        # Attach to the created workspace.
          at: ~/repo
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "40:4a:18:c2:b1:af:16:a8:27:54:65:ba:89:38:13:33"
      - run:
          name: "Copy changes to a v5 and v6 branch"
          command: |
            # Path to the file containing the list of SHAs
            SHA_FILE=$(<sha.txt)
            echo $SHA_FILE

            # Check if the SHA file exists
            if [ ! -f "$SHA_FILE" ]; then
                echo "File not found: $SHA_FILE"
                exit 1
            fi


workflows:
  version: 2
  test-deploy:
    jobs:
      - test:
      # Run the test job on all branches and tags.
          filters:
            tags:
              only: /^v.*/
      - create-v5-v6-branch:
          requires:
            - test
          filters:
            branches:
              only:
                - /^(WEBG|webg).*?(?<!-v5|-v6)$/
              ignore:
                - master
                - main
                - gh-page
                - next
                - /.*dependabot.*/
                - /.*v5.*/
                - /.*v6.*/
                - /.*-v5$/
                - /.*-v6$/
                - /.*-(v5|v6)$/
      - copy-to-v5-branch:
          requires:
            - create-v5-v6-branch
          filters:
            branches:
              only:
                - /^(WEBG|webg).*?(?<!-v5|-v6)$/
              ignore:
                - master
                - main
                - gh-page
                - next
                - /.*dependabot.*/
                - /.*v5.*/
                - /.*v6.*/
                - /.*-v5$/
                - /.*-v6$/
                - /.*-(v5|v6)$/